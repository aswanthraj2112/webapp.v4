Application architecture


Architecture diagram and overview
Your diagram should show all services that you use and how they connect to each other. It should be made digitally and be easily readable within your report.

CloudCraftLinks to an external site. has a diagram editor that can be used for free
draw.ioLinks to an external site. has an AWS shapes set (use one of the AWS templates or click +More Shapes and add the AWS shapes sets.) See draw.io blog postLinks to an external site. for more info.
Drawing and diagramming toolsLinks to an external site. lists several other options.
Briefly discuss the main use of each service. This part can be in bullet points.



Justification of architecture
Discuss your reasoning for the major choices in the cloud architecture. Your discussion should cover:

Choice of division into microservices (i.e. why these microservices instead of some other way that you could divide up functionality)
Choice(s) of compute (EC2 vs. ECS vs. Lambda)
Choice of communication mechanisms and load distribution mechanism
Choice of using service abstractions (API gateway, load balancer) or not
Your justification should make reference to (where appropriate):

Microservice resource requirements, and in particular the requirements of your CPU intensive process
Application functionality
You can also make reference to:

Ease of implementation
Scalability
Please note that this section is about why your architecture is as it is; it is not a description of the architecture.

Note that several "Project additional" criteria ask for a rationale, which you will include in the next section.



Response to marking criteria for project
This section is analogous to the response to marking criteria document from earlier assessments. There is a separate section for each criterion. The information required is indicated in the template.



Estimate the cost of your solution
Although cost optimisation is not the primary focus of this project, this criterion involves estimating the monthly cost of your solution, assuming an average demand of 50 concurrent users.

You will need to estimate what 50 concurrent users looks like from the perspective of resources utilisation. For this you can do some experimentation by using the application yourself for a while (say, 15 minutes) and see what impact this has on metrics like average CPU utilisation, RAM usage, bucket storage, and so on. AWS has a lot of metrics that you can access through CloudWatch or the monitoring tab on the details page for many services. It's not important that this estimate be super accurate, but you should try to get the order of magnitude.

If your application won't currently support 50 concurrent users, choose smaller number and specify this in your report.

You should use the AWS Pricing Calculator.

https://calculator.aws/Links to an external site.
You will need to provide the public share link that is generated by clicking "Share" in the summary of your estimate.
In your report, provide a summary which includes the total price for each AWS service, along with the public link.

If you wish to provide a cost breakdown from a different tool, please ask the teaching team.




rewrite the writtings into the below template structre:


# Application architecture

*Remove these instructions:*
*Your architecture diagram goes here*

*Briefly discuss the use of each service*
*Example:
* - S3: used to store user uploaded and transcoded video files, and video thumbnails*


## Project Core - Microservices

- **First service functionality:** [eg. Public facing API server]
- **First service compute:** [eg. EC2/Lambda/ECS, instance ID/name]
- **First service source files:**
  - [eg. source code filenames or directory]

- **Second service functionality:** 
- **Second service compute:**
- **Second service source files:**
  - 

- **Video timestamp:**


## Project Additional - Additional microservices

- **Third service functionality:**
- **Third service compute:**
- **Third service source files:**
  - 

- **Fourth service functionality:**
- **Fourth service compute:**
- **Fourth service source files:**
  - 

- **Video timestamp:**


## Project Additional - Serverless functions

- **Service(s) deployed on Lambda:**
- **Video timestamp:**
- **Relevant files:**
    -


## Project Additional - Container orchestration with ECS 

- **ECS cluster name:**
- **Task definition names:**
- **Video timestamp:**
- **Relevant files:**
    -


## Project Core - Load distribution

- **Load distribution mechanism:** [eg. SQS, ALB,...]
- **Mechanism instance name:** [eg. n1234567-project-alb]
- **Video timestamp:**
- **Relevant files:**
    -


## Project Additional - Communication mechanisms

- **Communication mechanism(s):** [eg. SQS, EventBridge, ...]
- **Mechanism instance name:** [eg. n1234567-project-sqs]
- **Video timestamp:**
- **Relevant files:**
    -


## Project Core - Autoscaling

- **EC2 Auto-scale group or ECS Service name:**
- **Video timestamp:**
- **Relevant files:**
    -


## Project Additional - Custom scaling metric

- **Description of metric:** [eg. age of oldest item in task queue]
- **Implementation:** [eg. custom cloudwatch metric with lambda]
- **Rationale:** [discuss both small and large scales]
- **Video timestamp:**
- **Relevant files:**
    -


## Project Core - HTTPS

- **Domain name:**
- **Certificate ID:**
- **ALB/API Gateway name:**
- **Video timestamp:**
- **Relevant files:**
    -


## Project Additional - Container orchestration features

- **First additional ECS feature:** [eg. service discovery]
- **Second additional ECS feature:**
- **Video timestamp:**
- **Relevant files:**
    -


## Project Additional - Infrastructure as Code

- **Technology used:** [eg. CloudFormation, Terraform, ...]
- **Services deployed:** [eg. ALB, SQS, ....  Only Block 3 services need to be listed]
- **Video timestamp:**
- **Relevant files:**
    -


## Project Additional - Dead letter queue

- **Technology used:** [eg. SQS, ...]
- **Services deployed:** [eg. SQS, ....  Only Block 3 services need to be listed]
- **Video timestamp:**
- **Relevant files:**
    -


## Project Additional - Edge Caching

- **Cloudfront Distribution ID:**
- **Content cached:**
- **Rationale for caching:**
- **Video timestamp:**
- **Relevant files:**
    -


## Project Additional - Other (with prior permission only)

- **Description:**
- **Video timestamp:**
- **Relevant files:**
    -

# Cost estimate

*Remove these instructions:*
*Include the public share link from the AWS cost calculator*
*Include a summary of the total price  per month for each AWS service that you use*
*eg:*
*- EC2: 25.75*
